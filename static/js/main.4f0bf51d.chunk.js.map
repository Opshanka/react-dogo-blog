{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","length","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","console","log","ok","Error","json","catch","err","name","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f0bf51d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='navbar'>\r\n      <h1>The Dogo Blog</h1>\r\n      <div className='links'>\r\n        <Link to='/'>Home</Link>\r\n        <Link to='/create'>Create</Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Link } from 'react-router-dom';\r\nconst BlogList = ({ blogs, title }) => {\r\n  // const blogs = props.blogs;\r\n  // const title = props.title;\r\n  if (!blogs.length) {\r\n    return (\r\n      <div className='blog_list'>\r\n        <h2>No Blogs</h2>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='blog_list'>\r\n        <h2>{title}</h2>\r\n        {blogs.map((blog) => (\r\n          <div className='blogs_preview' key={blog.id}>\r\n            <Link to={`/blogs/${blog.id}`}>\r\n              <h2>{blog.title}</h2>\r\n              <p> written by {blog.author}</p>\r\n            </Link>\r\n            {/* <button onClick={() => handleDelete(blog.id)}>Delete</button> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BlogList;\r\n","import { useState, useEffect } from 'react';\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n    setTimeout(() => {\r\n      fetch(url, { signal: abortCont.signal })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (!res.ok) {\r\n            throw Error('could not fetch the data for thatt resource');\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          setData(data);\r\n          setIsPending(false);\r\n          setError(null);\r\n        })\r\n        .catch((err) => {\r\n          if (err.name === 'AbortError') {\r\n            console.log('fetch aborted');\r\n          } else {\r\n            setError(err.message);\r\n            setIsPending(false);\r\n          }\r\n        });\r\n    }, 1000);\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\nconst Home = () => {\r\n  const {\r\n    data: blogs,\r\n    isPending,\r\n    error,\r\n  } = useFetch('http://localhost:8000/blogs');\r\n\r\n  // const [name, setName] = useState('mario');\r\n\r\n  // const handleDelete = (id) => {\r\n  //   const newBlogs = blogs.filter((blogs) => blogs.id !== id);\r\n  //   setBlogs(newBlogs);\r\n  // };\r\n  return (\r\n    <div className='home'>\r\n      {error && <div>{error}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n      {blogs && <BlogList blogs={blogs} title='All Blogs' />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('mario');\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsPending(true);\r\n    setTimeout(() => {\r\n      const blog = { title, body, author };\r\n      fetch('http://localhost:8000/blogs', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(blog),\r\n      }).then(() => {\r\n        console.log('new blog added');\r\n        setIsPending(false);\r\n        // history.go(-1);\r\n        history.push('/');\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className='create'>\r\n      <h2>Add New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog Title</label>\r\n        <input\r\n          type='text'\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog Body</label>\r\n        <textarea\r\n          type='text'\r\n          required\r\n          onChange={(e) => setBody(e.target.value)}\r\n        />\r\n        <label>Blog Author</label>\r\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\r\n          <option value='mario'>mario</option>\r\n          <option value='yoshi'>yoshi</option>\r\n        </select>\r\n        {!isPending && <button>Add Blog</button>}\r\n        {isPending && <button disabled>Adding Blog...</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useFetch from './useFetch';\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const {\r\n    data: blog,\r\n    error,\r\n    isPending,\r\n  } = useFetch('http://localhost:8000/blogs/' + id);\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, { method: 'DELETE' }).then(\r\n      () => {\r\n        history.push('/');\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='blog-details'>\r\n      {isPending && <div>Loading...</div>}\r\n      {error && <div>{error}</div>}\r\n      {blog && (\r\n        <article>\r\n          <h2>{blog.title}</h2>\r\n          <p>\r\n            Written by <strong>{blog.author}</strong>\r\n          </p>\r\n          <div>{blog.body}</div>\r\n          <button onClick={handleClick}>DELETE</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='not-found'>\r\n      <h1>404</h1>\r\n      <h2>Sorry</h2>\r\n      <p>That page can not be found</p>\r\n      <Link to='/'>Back to Home Page...</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='content'>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/react-dogo-blog/'>\n              <Home />\n            </Route>\n            <Route path='/create'>\n              <Create />\n            </Route>\n            <Route path='/Blogs/:id'>\n              <BlogDetails />\n            </Route>\n            <Route path='*'>\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}